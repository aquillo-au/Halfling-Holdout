-> $gtk.reset seed: 1691384335
=> 0
KALLER: ["app/main.rb:91"] Array
KALLER: ["app/main.rb:91"] Array
-> $gtk.reset seed: 1691386105
=> nil
-> args.state.clouds
=> []
-> args.state.clouds.size
=> 0
-> spawn_cloud(args)
=> {:x=>759, :y=>403.0, :w=>48, :h=>48, :path=>"sprites/cloud.png"}
-> spawn_cloud(args)
=> {:x=>933, :y=>658.0, :w=>48, :h=>48, :path=>"sprites/cloud.png"}
-> spawn_cloud(args)
=> {:x=>717, :y=>473.0, :w=>48, :h=>48, :path=>"sprites/cloud.png"}
-> arg.state.clouds
* EXCEPTION: * ERROR - :arg method missing on ~Class~.
The method named
  :arg
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :arg method missing on ~Class~
-> args.state.clouds
=> []
-> spawn_cloud(args)
=> {:x=>210, :y=>606.0, :w=>48, :h=>48, :path=>"sprites/cloud.png"}
-> args.state.clouds
=> []
-> $gtk.reset seed: 1691473106
=> 0
-> $gtk.reset seed: 1691473106
=> 0
-> $gtk.reset seed: 1691648847
=> 0
-> found_enemy.type
* EXCEPTION: * ERROR - :found_enemy method missing on ~Class~.
The method named
  :found_enemy
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :found_enemy method missing on ~Class~
-> found_enemy
* EXCEPTION: * ERROR - :found_enemy method missing on ~Class~.
The method named
  :found_enemy
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :found_enemy method missing on ~Class~
-> BADDIES
=> {:goblin=>{:hp=>5, :atk=>2}, :rat=>{:hp=>2, :atk=>1}}
-> args.state.enemies
=> [{:x=>10, :y=>10, :type=>:goblin, :tile_key=>:B, :hp=>nil}, {:x=>15, :y=>20, :type=>:rat, :tile_key=>"\xf0\x9f\x90\x80"}]
-> baddie
* EXCEPTION: * ERROR - :baddie method missing on ~Class~.
The method named
  :baddie
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :baddie method missing on ~Class~
-> args.state.enemies
=> [{:x=>10, :y=>10, :type=>:goblin, :tile_key=>:B, :hp=>nil}, {:x=>15, :y=>20, :type=>:rat, :tile_key=>"\xf0\x9f\x90\x80"}]
-> baddies[goblin].hp
* EXCEPTION: * ERROR - :baddies method missing on ~Class~.
The method named
  :baddies
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :baddies method missing on ~Class~
-> BADDIES[goblin].hp
* EXCEPTION: * ERROR - :goblin method missing on ~Class~.
The method named
  :goblin
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :goblin method missing on ~Class~
-> BADDIES[rat].hp
* EXCEPTION: * ERROR - :rat method missing on ~Class~.
The method named
  :rat
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :rat method missing on ~Class~
-> BADDIES[:rat].hp
=> 2
-> args.state.player.atk
=> nil
-> BADDIES[rat].hp
* EXCEPTION: * ERROR - :rat method missing on ~Class~.
The method named
  :rat
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :rat method missing on ~Class~
-> $gtk.grep_source [".found_enemys", '']
=> Here is a search of the source code:



You can re-run this search using the following code. Type it into
the file called repl.rb and save:

puts $gtk.grep_source [".found_enemys", ""]

After saving repl.rb, go to the game and press one of these [`] [~] [²] [^] [º] [§]
to open the DragonRuby GTK Console.
-> args.state.enemies
=> [{:x=>10, :y=>10, :type=>:goblin, :tile_key=>:B, :hp=>5}, {:x=>15, :y=>20, :type=>:rat, :tile_key=>:R, :hp=>2}]
-> args.state.walls
=> [{:x=>9, :y=>9, :tile_key=>:wall}]
-> args.state.walls
=> nil
-> args
=> #<GTK::Args:0x4ec7850>
-> args.state.enemies
=> nil
-> $gtk.rese
* EXCEPTION: * ERROR - :rese method missing on ~GTK::Runtime~.
The method named
  :rese
doesn't exist on
  [GTK::Runtime].
#+begin_src ~GTK::Runtime#inspect~
#<GTK::Runtime:0x433bb10>
#+end_src ~GTK::Runtime#inspect~ for :rese method missing on ~GTK::Runtime~

** Did you mean?
Here's a list of methods that kind of look like :rese.
*** :reserved_primitives, *** :reset, *** :reset_all_mtimes, *** :reset_framerate_calculation, *** :reset_next_tick, *** :reset_sprite, *** :reset_state, *** :reset_touch_count
-> $gtk.reset
=> 0
KALLER: ["app/combat.rb:1"] Array
-> $gtk.reset
=> nil
-> $gtk.reset seed: 1691665392
=> 0
-> $gtk.reset
=> 0
-> args.state.player
=> {:y=>7, :x=>8, :hp=>17, :atk=>2}
-> enemy
* EXCEPTION: * ERROR - :enemy method missing on ~Class~.
The method named
  :enemy
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :enemy method missing on ~Class~
-> args.state.walls
=> [{:x=>9, :y=>16, :tile_key=>:wall}, {:x=>9, :y=>17, :tile_key=>:wall}, {:x=>9, :y=>18, :tile_key=>:wall}, {:x=>9, :y=>19, :tile_key=>:wall}, {:x=>9, :y=>20, :tile_key=>:wall}]
-> args.state.enemies
=> [{:x=>8, :y=>7, :type=>:goblin, :tile_key=>:B, :hp=>3}, {:x=>8, :y=>8, :type=>:rat, :tile_key=>:R, :hp=>0, :dead=>true}]
-> $gtk.reset seed: 169170388
=> 0
-> args.state.enemies
=> [{:x=>8, :y=>9, :type=>:goblin, :tile_key=>:B, :hp=>5}]
{:x=>19, :y=>16, :tile_key=>:wall}
{:x=>19, :y=>17, :tile_key=>:wall}
{:x=>19, :y=>18, :tile_key=>:wall}
{:x=>19, :y=>19, :tile_key=>:wall}
{:x=>19, :y=>20, :tile_key=>:wall}
-> args.state.hotpot
=> {:y=>20, :x=>30, :hp=>-52, :atk=>0, :dead=>true}
-> $gtk.grep_source [".goblin", '']
=> Here is a search of the source code:



You can re-run this search using the following code. Type it into
the file called repl.rb and save:

puts $gtk.grep_source [".goblin", ""]

After saving repl.rb, go to the game and press one of these [`] [~] [²] [^] [º] [§]
to open the DragonRuby GTK Console.
-> args.state.enemies
=> {:entity_id=>3, :entity_name=>:enemies, :entity_keys_by_ref=>{}, :__thrash_count__=>{}}
-> args.state.enemies
=> {:entity_id=>3, :entity_name=>:enemies, :entity_keys_by_ref=>{}, :__thrash_count__=>{}}
-> args.state.budget
=> 5
-> args.state.budget
=> 5
-> args.state.enemies
=> [{:x=>57, :y=>35, :type=>"goblin", :tile_key=>:G, :hp=>5, :atk=>2}, {:x=>41, :y=>3, :type=>"rat", :tile_key=>:R, :hp=>2, :atk=>1}, {:x=>23, :y=>3, :type=>"rat", :tile_key=>:R, :hp=>2, :atk=>1}, {:x=>3, :y=>28, :type=>"rat", :tile_key=>:R, :hp=>2, :atk=>1}, {:x=>30, :y=>3, :type=>"rat", :tile_key=>:R, :hp=>2, :atk=>1}, {:x=>53, :y=>42, :type=>"goblin", :tile_key=>:G, :hp=>5, :atk=>2}, {:x=>13, :y=>1, :type=>"rat", :tile_key=>:R, :hp=>2, :atk=>1}, {:x=>38, :y=>3, :type=>"rat", :tile_key=>:R, :hp=>2, :atk=>1}, {:x=>2, :y=>41, :type=>"goblin", :tile_key=>:G, :hp=>5, :atk=>2}, {:x=>58, :y=>13, :type=>"goblin", :tile_key=>:G, :hp=>5, :atk=>2}, {:x=>58, :y=>16, :type=>"rat", :tile_key=>:R, :hp=>2, :atk=>1}, {:x=>1, :y=>35, :type=>"goblin", :tile_key=>:G, :hp=>5, :atk=>2}, {:x=>48, :y=>41, :type=>"rat", :tile_key=>:R, :hp=>2, :atk=>1}, {:x=>8, :y=>0, :type=>"rat", :tile_key=>:R, :hp=>2, :atk=>1}, {:x=>59, :y=>32, :type=>"rat", :tile_key=>:R, :hp=>2, :atk=>1}]
-> args.state.budget
=> 5
-> args.state.budget
=> 5
4
3
1
0
-> $gtk.grep_source [".args", '']
=> Here is a search of the source code:

app/tests.rb, line 19: game.args = args
app/sprite_lookup.rb, line 72: $gtk.args.state.reserved.sprite_lookup[key]
app/sprite_lookup.rb, line 125: $gtk.args.state.reserved.sprite_lookup = sprite_lookup
app/game.rb, line 206: tile($gtk.args.state.grid.padding_x + x * DESTINATION_TILE_SIZE,
app/game.rb, line 207: $gtk.args.state.grid.padding_y + y * DESTINATION_TILE_SIZE,

You can re-run this search using the following code. Type it into
the file called repl.rb and save:

puts $gtk.grep_source [".args", ""]

After saving repl.rb, go to the game and press one of these [`] [~] [²] [^] [º] [§]
to open the DragonRuby GTK Console.
-> $gtk.rese
* EXCEPTION: * ERROR - :rese method missing on ~GTK::Runtime~.
The method named
  :rese
doesn't exist on
  [GTK::Runtime].
#+begin_src ~GTK::Runtime#inspect~
#<GTK::Runtime:0x4c0d050>
#+end_src ~GTK::Runtime#inspect~ for :rese method missing on ~GTK::Runtime~

** Did you mean?
Here's a list of methods that kind of look like :rese.
*** :reserved_primitives, *** :reset, *** :reset_all_mtimes, *** :reset_framerate_calculation, *** :reset_next_tick, *** :reset_sprite, *** :reset_state, *** :reset_touch_count
'reset': wrong number of arguments (0 for 1)
* FATAL: The GTK::Console console threw an unhandled exception and has been reset. You should report this exception (along with reproduction steps) to DragonRuby.
'reset': wrong number of arguments (0 for 1)
* FATAL: The GTK::Console console threw an unhandled exception and has been reset. You should report this exception (along with reproduction steps) to DragonRuby.
'reset': wrong number of arguments (0 for 1)
* FATAL: The GTK::Console console threw an unhandled exception and has been reset. You should report this exception (along with reproduction steps) to DragonRuby.
'reset': wrong number of arguments (0 for 1)
* FATAL: The GTK::Console console threw an unhandled exception and has been reset. You should report this exception (along with reproduction steps) to DragonRuby.
-> $gtk.reset
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):8:in instance_eval
*** app/game.rb:264
-> $gtk.reset
=> nil
-> combat_log
* EXCEPTION: * ERROR - :combat_log method missing on ~Class~.
The method named
  :combat_log
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :combat_log method missing on ~Class~
-> args.state.combat_log
=> ["rat swings at the Guard for 1 damage, leaving it with -37 hps", "rat swings at the Guard for 1 damage, leaving it with -38 hps", "rat swings at the Guard for 1 damage, leaving it with -39 hps", "rat swings at the Guard for 1 damage, leaving it with -40 hps", "rat swings at the Guard for 1 damage, leaving it with -41 hps", "rat swings at the Guard for 1 damage, leaving it with -42 hps", "rat swings at the Guard for 1 damage, leaving it with -43 hps", "rat swings at the Guard for 1 damage, leaving it with -44 hps", "rat swings at the Guard for 1 damage, leaving it with -45 hps", "goblin swings at the  for 2 damage, leaving it with 9 hps", "rat swings at the Guard for 1 damage, leaving it with -46 hps", "goblin swings at the  for 2 damage, leaving it with 19 hps", "rat swings at the Guard for 1 damage, leaving it with -47 hps", "goblin swings at the  for 2 damage, leaving it with 17 hps", "rat swings at the Guard for 1 damage, leaving it with -48 hps", "goblin swings at the  for 2 damage, leaving it with 5 hps", "goblin swings at the  for 2 damage, leaving it with 15 hps", "rat swings at the Guard for 1 damage, leaving it with -49 hps", "goblin swings at the  for 2 damage, leaving it with 13 hps", "rat swings at the Guard for 1 damage, leaving it with -50 hps", "goblin swings at the  for 2 damage, leaving it with 11 hps", "rat swings at the Guard for 1 damage, leaving it with -51 hps", "goblin swings at the  for 2 damage, leaving it with 9 hps", "rat swings at the Guard for 1 damage, leaving it with -52 hps", "goblin swings at the  for 2 damage, leaving it with 7 hps", "rat swings at the Guard for 1 damage, leaving it with -53 hps", "goblin swings at the  for 2 damage, leaving it with 5 hps", "rat swings at the Guard for 1 damage, leaving it with -54 hps", "goblin swings at the  for 2 damage, leaving it with 3 hps", "rat swings at the Guard for 1 damage, leaving it with -55 hps", "goblin swings at the  for 2 damage, leaving it with 3 hps", "rat swings at the Guard for 1 damage, leaving it with -56 hps", "goblin swings at the  for 2 damage, leaving it with -1 hps", "rat swings at the Guard for 1 damage, leaving it with -57 hps", "goblin swings at the  for 2 damage, leaving it with 16 hps", "goblin swings at the  for 2 damage, leaving it with 14 hps", "goblin swings at the  for 2 damage, leaving it with 12 hps", "rat swings at the Guard for 1 damage, leaving it with -58 hps", "rat swings at the Guard for 1 damage, leaving it with -59 hps", "rat swings at the Guard for 1 damage, leaving it with -60 hps", "rat swings at the Guard for 1 damage, leaving it with -61 hps", "rat swings at the Guard for 1 damage, leaving it with -62 hps", "rat swings at the Guard for 1 damage, leaving it with -63 hps", "rat swings at the Guard for 1 damage, leaving it with -64 hps", "rat swings at the Guard for 1 damage, leaving it with -65 hps", "rat swings at the Guard for 1 damage, leaving it with -66 hps", "rat swings at the Guard for 1 damage, leaving it with -67 hps", "rat swings at the Guard for 1 damage, leaving it with -68 hps", "rat swings at the Guard for 1 damage, leaving it with -69 hps", "rat swings at the Guard for 1 damage, leaving it with -70 hps", "rat swings at the Guard for 1 damage, leaving it with -71 hps", "rat swings at the Guard for 1 damage, leaving it with -72 hps", "rat swings at the Guard for 1 damage, leaving it with -73 hps", "rat swings at the Guard for 1 damage, leaving it with -74 hps", "rat swings at the  for 1 damage, leaving it with 11 hps"]
-> args.state.allies
=> nil
-> message
* EXCEPTION: * ERROR - :message method missing on ~Class~.
The method named
  :message
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :message method missing on ~Class~
* ERROR: Ambiguous indexor invocation.
I can't initialize ~:allies~ with a default value on your behalf because I don't know if
the property is meant to represent an ~Array~ or a ~Hash~. Please initialize ~.:allies~
with a default value.

The indexor function
  :[]
with argument(s)
  1
was invoked on an Entity with an uninitialized property named
  ~.allies~
** EXAMPLE:
#+begin_src
  # example initialization to an ~Array~
  args.state.[...].allies ||= []

  # example initialization to a ~Hash~
  args.state.[...].allies ||= {}

  # example initialization to a ~Entity~
  args.state.[...].allies ||= args.state.new_entity(:allies)
#+end_src

-> args.state.info_message
=> You moved east.
-> $gtk.reset seed: 1692001020
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):12:in instance_eval
*** app/game.rb:297
-> $gtk.reset
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):12:in instance_eval
*** app/game.rb:297
-> $gtk.reset
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):12:in instance_eval
*** app/village.rb:14
-> $gtk.reset
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):12:in instance_eval
*** app/game.rb:298
-> $gtk.reset
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):12:in instance_eval
*** app/game.rb:298
-> $gtk.reset
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):12:in instance_eval
*** app/village.rb:14
-> $gtk.reset
=> nil
-> args.state.arrows
=> [{:x=>29, :y=>19, :tile_key=>:sarrow, :direction=>"s"}, {:x=>29, :y=>19, :tile_key=>:sarrow, :direction=>"s"}, {:x=>29, :y=>19, :tile_key=>:sarrow, :direction=>"s"}, {:x=>29, :y=>19, :tile_key=>:sarrow, :direction=>"s"}, {:x=>29, :y=>19, :tile_key=>:sarrow, :direction=>"s"}, {:x=>29, :y=>19, :tile_key=>:sarrow, :direction=>"s"}, {:x=>29, :y=>19, :tile_key=>:sarrow, :direction=>"s"}, {:x=>29, :y=>19, :tile_key=>:sarrow, :direction=>"s"}]
-> $gtk.reset seed: 1692012623
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):12:in instance_eval
*** app/game.rb:350
-> args.state.arrows
=> [18]
-> $gtk.reset
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):12:in instance_eval
*** app/game.rb:350
-> $gtk.reset
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):8:in instance_eval
*** app/game.rb:426
-> GOODIES
=> {:guard=>{:hp=>10, :atk=>1, :value=>2, :name=>"Guard", :tile_key=>:h}, :villager=>{:hp=>5, :atk=>1, :value=>1, :name=>"Villager", :tile_key=>:v}}
-> GOODIES[:villager]
=> {:hp=>5, :atk=>1, :value=>1, :name=>"Villager", :tile_key=>:v}
-> args.grid
=> #<GTK::Grid:0x27224d0>
-> args.grid.h
=> 720
-> args.grid.x
=> 0
-> args.grid.w
=> 1280
-> args.state.grid.width
=> 61
-> $gtk.reset
** ~reset~
** ~reset_next_tick~
** ~reset_sprite~
* INFO: 3 matches(s) found in DOCS for ~reset~ (see above).
You can search the documentation yourself using the following command in the Console:
#+begin_src ruby
  docs_search "reset"
#+end_src

* EXCEPTION: 'reset': wrong number of arguments (0 for 1)
** Backtrace:
*** app/game.rb:1:in reset
*** (eval):8:in instance_eval
*** app/game.rb:521
-> args.state.player
=> {:y=>27, :x=>29, :hp=>37, :atk=>5}
-> args.state.combat_log
=> [["goblin swings at the Guard for 2 damage", "leaving it with 2 hps"], ["Guard swings at the goblin for 1 damage", "killing it"], ["Guard swings at the goblin for 1 damage", "leaving it with 4 hps"], ["goblin swings at the Guard for 2 damage", "killing it"], ["Guard swings at the goblin for 1 damage", "leaving it with 3 hps"], ["Guard swings at the goblin for 1 damage", "leaving it with 2 hps"], ["goblin swings at the Guard for 2 damage", "leaving it with 8 hps"], ["Guard swings at the goblin for 1 damage", "leaving it with 1 hps"], ["goblin swings at the Guard for 2 damage", "leaving it with 6 hps"], ["Guard swings at the goblin for 1 damage", "killing it"]]
-> args.state.hotpot
=> {:y=>20, :x=>30, :hp=>20, :atk=>0}
-> args.state.player
=> {:y=>21, :x=>29, :hp=>-3, :maxhp=>40, :atk=>2, :type=>"You", :dead=>true}
'reset': wrong number of arguments (0 for 1)
* FATAL: The GTK::Console console threw an unhandled exception and has been reset. You should report this exception (along with reproduction steps) to DragonRuby.
-> $gtk.reset
=> 0
-> args.state.goodies
=> nil
-> args.state
=> {:entity_id=>3, :tick_count=>121, :__thrash_count__=>{:sprite_lookup==>1, :each=>3, :x=>1, :reject!=>3, :dead=>1, :size=>1}, :scene=>"gameplay", :high_score=>0, :reserved=>{:entity_id=>1, :entity_name=>:reserved, :entity_keys_by_ref=>{}, :sprite_lookup=>{0=>[3, 0], 1=>[3, 1], 2=>[3, 2], 3=>[3, 3], 4=>[3, 4], 5=>[3, 5], 6=>[3, 6], 7=>[3, 7], 8=>[3, 8], 9=>[3, 9], "@"=>[0, 2], :A=>[4, 1], :B=>[4, 2], :C=>[4, 3], :D=>[4, 4], :E=>[4, 5], :F=>[4, 6], :G=>[4, 7], :H=>[4, 8], :I=>[4, 9], :J=>[4, 10], :K=>[4, 11], :L=>[4, 12], :M=>[4, 13], :N=>[4, 14], :O=>[4, 15], :P=>[5, 0], :Q=>[5, 1], :R=>[5, 2], :S=>[5, 3], :T=>[5, 4], :U=>[5, 5], :V=>[5, 6], :W=>[5, 7], :X=>[5, 8], :Y=>[5, 9], :Z=>[5, 10], :a=>[6, 1], :b=>[6, 2], :c=>[6, 3], :d=>[6, 4], :e=>[6, 5], :f=>[6, 6], :g=>[6, 7], :h=>[6, 8], :i=>[6, 9], :j=>[6, 10], :k=>[6, 11], :l=>[6, 12], :m=>[6, 13], :n=>[6, 14], :o=>[6, 15], :p=>[7, 0], :q=>[7, 1], :r=>[7, 2], :s=>[7, 3], :t=>[7, 4], :u=>[7, 5], :v=>[7, 6], :w=>[7, 7], :x=>[7, 8], :y=>[7, 9], :z=>[7, 10], "|"=>[7, 12], :wall=>[11, 10], :tree=>[1, 3], :necorn=>[12, 9], :secorn=>[12, 8], :nwcorn=>[11, 11], :swcorn=>[11, 12], :hwall=>[12, 13], :sarrow=>[1, 9], :warrow=>[1, 8], :darrow=>[1, 10], :aarrow=>[1, 11]}}, :player=>{:entity_id=>2, :entity_name=>:player, :entity_keys_by_ref=>{}, :__thrash_count__=>{:*=>1}}, :hotpot=>{:entity_id=>3, :entity_name=>:hotpot, :entity_keys_by_ref=>{}, :__thrash_count__=>{}}, :clouds=>{:entity_id=>4, :entity_name=>:clouds, :entity_keys_by_ref=>{}, :__thrash_count__=>{:<=>1}, :size=>{:entity_id=>5, :entity_name=>:size, :entity_keys_by_ref=>{}}}}
-> args.state.hotpot
=> {:entity_id=>3, :entity_name=>:hotpot, :entity_keys_by_ref=>{}, :__thrash_count__=>{}}
-> args.state.info_message
=> nil
-> $gtk.reset
=> 0
-> $gtk.reset
=> 0
KALLER: ["app/level.rb:1"] Array
KALLER: ["app/level.rb:1"] Array
-> args.state.hotpot
=> {:y=>20, :x=>30, :hp=>20, :atk=>0}
-> args.state.walls
=> [{:x=>22, :y=>14, :tile_key=>:secorn}, {:x=>22, :y=>15, :tile_key=>:wall}, {:x=>22, :y=>16, :tile_key=>:wall}, {:x=>22, :y=>17, :tile_key=>:wall}, {:x=>22, :y=>24, :tile_key=>:wall}, {:x=>22, :y=>25, :tile_key=>:wall}, {:x=>22, :y=>26, :tile_key=>:wall}, {:x=>22, :y=>27, :tile_key=>:necorn}, {:x=>23, :y=>27, :tile_key=>:hwall}, {:x=>24, :y=>27, :tile_key=>:hwall}, {:x=>25, :y=>27, :tile_key=>:hwall}, {:x=>26, :y=>27, :tile_key=>:hwall}, {:x=>33, :y=>27, :tile_key=>:hwall}, {:x=>34, :y=>27, :tile_key=>:hwall}, {:x=>35, :y=>27, :tile_key=>:hwall}, {:x=>36, :y=>27, :tile_key=>:hwall}, {:x=>37, :y=>27, :tile_key=>:nwcorn}, {:x=>37, :y=>26, :tile_key=>:wall}, {:x=>37, :y=>25, :tile_key=>:wall}, {:x=>37, :y=>24, :tile_key=>:wall}, {:x=>37, :y=>17, :tile_key=>:wall}, {:x=>37, :y=>16, :tile_key=>:wall}, {:x=>37, :y=>15, :tile_key=>:wall}, {:x=>37, :y=>14, :tile_key=>:swcorn}, {:x=>36, :y=>14, :tile_key=>:hwall}, {:x=>35, :y=>14, :tile_key=>:hwall}, {:x=>34, :y=>14, :tile_key=>:hwall}, {:x=>33, :y=>14, :tile_key=>:hwall}, {:x=>23, :y=>14, :tile_key=>:hwall}, {:x=>24, :y=>14, :tile_key=>:hwall}, {:x=>25, :y=>14, :tile_key=>:hwall}, {:x=>26, :y=>14, :tile_key=>:hwall}, {:x=>6, :y=>3, :tile_key=>:tree}, {:x=>11, :y=>28, :tile_key=>:tree}, {:x=>36, :y=>31, :tile_key=>:tree}, {:x=>51, :y=>25, :tile_key=>:tree}, {:x=>25, :y=>7, :tile_key=>:tree}, {:x=>3, :y=>25, :tile_key=>:tree}, {:x=>49, :y=>11, :tile_key=>:tree}, {:x=>52, :y=>36, :tile_key=>:tree}]
-> args.state.combat_log
=> []
-> args.state.enemies
=> [{:x=>0.9669527325236594, :y=>nil, :type=>"rat", :tile_key=>:r, :hp=>2, :atk=>1}]
-> args.state.goodies
=> [{:x=>26, :y=>13, :type=>"Guard", :tile_key=>:h, :hp=>10, :atk=>1}, {:x=>31, :y=>13, :type=>"Guard", :tile_key=>:h, :hp=>10, :atk=>1}, {:x=>37, :y=>18, :type=>"Guard", :tile_key=>:h, :hp=>10, :atk=>1}, {:x=>37, :y=>23, :type=>"Guard", :tile_key=>:h, :hp=>10, :atk=>1}, {:x=>31, :y=>28, :type=>"Guard", :tile_key=>:h, :hp=>10, :atk=>1}, {:x=>26, :y=>28, :type=>"Guard", :tile_key=>:h, :hp=>10, :atk=>1}, {:x=>20, :y=>18, :type=>"Guard", :tile_key=>:h, :hp=>10, :atk=>1}, {:x=>20, :y=>23, :type=>"Guard", :tile_key=>:h, :hp=>10, :atk=>1}, {:x=>30, :y=>20, :type=>"Cook", :tile_key=>:c, :hp=>5, :atk=>1}]
-> $gtk.reset
=> 0
KALLER: ["app/game.rb:1"] Array
-> args.state.player.maxhp
=> 20
-> defender.maxhp
* EXCEPTION: * ERROR - :defender method missing on ~Class~.
The method named
  :defender
doesn't exist on
  [Class].
#+begin_src ~Class#inspect~
GTK::ConsoleEvaluator
#+end_src ~Class#inspect~ for :defender method missing on ~Class~
-> $gtk.reset
=> nil
